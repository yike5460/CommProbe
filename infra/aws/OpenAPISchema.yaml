openapi: 3.0.3
info:
  title: Supio Reddit Legal Communities Crawler API
  description: |
    REST API for triggering and monitoring Reddit crawl jobs that collect legal technology
    feedback from Reddit communities, analyze sentiment using AI, and store actionable insights.

    This API serves as the backend for Cloudflare Workers and frontend applications to:
    - Trigger manual Reddit data collection jobs
    - Monitor execution status and progress
    - Access collected insights and analytics
    - Manage crawl job configurations
  version: 1.0.0
  contact:
    name: Supio Engineering Team
    email: engineering@supio.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://6bsn9muwfi.execute-api.us-west-2.amazonaws.com/v1
    description: Production API Gateway

security:
  - ApiKeyAuth: []

paths:
  /:
    get:
      summary: Get API Documentation
      description: Returns comprehensive API documentation and available endpoints
      operationId: getApiDocumentation
      tags:
        - Documentation
      responses:
        '200':
          description: API documentation retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiDocumentation'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /trigger:
    post:
      summary: Trigger New Crawl Job
      description: |
        Start a new Reddit crawl job with optional parameters.
        The job will collect posts from specified subreddits, analyze them with AI,
        and store actionable insights in DynamoDB.
      operationId: triggerCrawlJob
      tags:
        - Job Management
      requestBody:
        description: Optional crawl parameters to customize the job
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrawlTriggerRequest'
            examples:
              default:
                summary: Default crawl (all subreddits, 3 days back)
                value: {}
              custom:
                summary: Custom crawl parameters (PI-focused)
                value:
                  subreddits: ["LawFirm", "Lawyertalk", "legaltech", "legaltechAI"]
                  crawl_type: "both"
                  days_back: 2
                  min_score: 8
              quick_test:
                summary: Quick test crawl
                value:
                  days_back: 1
                  min_score: 5
                  crawl_type: "search"
      responses:
        '200':
          description: Crawl job started successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrawlTriggerResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          description: A crawl job with this name is already running
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /status/{executionName}:
    get:
      summary: Get Job Status
      description: |
        Check the status of a specific crawl job execution.
        Returns detailed information including current status, timestamps,
        input parameters, and output results.
      operationId: getJobStatus
      tags:
        - Job Management
      parameters:
        - name: executionName
          in: path
          required: true
          description: The unique execution name returned when triggering a job
          schema:
            type: string
            pattern: '^manual-[0-9]{8}-[0-9]{6}-[a-f0-9]{8}$'
            example: manual-20250923-021621-e5cff012
      responses:
        '200':
          description: Job status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatusResponse'
        '404':
          description: Job execution not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /executions:
    get:
      summary: List Recent Executions
      description: |
        Get a list of the 10 most recent crawl job executions with basic status information.
        Useful for building execution history dashboards and monitoring overall system health.
      operationId: listRecentExecutions
      tags:
        - Job Management
      responses:
        '200':
          description: Execution list retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionListResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /insights:
    get:
      summary: List Insights with Filtering
      description: |
        Get filtered list of insights with pagination and analytics.
        Essential for dashboard views, feature prioritization, and product management workflows.
      operationId: listInsights
      tags:
        - Insights
      parameters:
        - name: priority_min
          in: query
          required: false
          description: Minimum priority score threshold
          schema:
            type: integer
            minimum: 0
            maximum: 10
            default: 0
        - name: priority_max
          in: query
          required: false
          description: Maximum priority score threshold
          schema:
            type: integer
            minimum: 0
            maximum: 10
            default: 10
        - name: category
          in: query
          required: false
          description: Filter by feature category
          schema:
            type: string
            enum: [document_automation, workflow_management, ai_integration, case_management, billing_automation, client_communication, legal_research, compliance_tracking]
        - name: user_segment
          in: query
          required: false
          description: Filter by user segment
          schema:
            type: string
            enum: [large_law_firm, mid_size_firm, solo_practitioner, corporate_legal, government_legal, legal_tech_vendor]
        - name: date_from
          in: query
          required: false
          description: Start date filter (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: date_to
          in: query
          required: false
          description: End date filter (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: limit
          in: query
          required: false
          description: Number of results to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
      responses:
        '200':
          description: Insights retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightsListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /insights/{insightId}:
    get:
      summary: Get Single Insight Details
      description: |
        Get detailed information for a specific insight including full post content.
        Essential for detailed insight modal/page views and direct link sharing.
      operationId: getInsightDetails
      tags:
        - Insights
      parameters:
        - name: insightId
          in: path
          required: true
          description: The unique insight ID in format INSIGHT-DATE-PRIORITY-SCORE-ID-POST_ID
          schema:
            type: string
            pattern: '^INSIGHT-[0-9]{4}-[0-9]{2}-[0-9]{2}-PRIORITY-[0-9]+-ID-[a-zA-Z0-9]+$'
            example: INSIGHT-2025-09-23-PRIORITY-8-ID-1nnv6yo
      responses:
        '200':
          description: Insight details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightDetailsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          description: Insight not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /analytics/summary:
    get:
      summary: Analytics Dashboard Data
      description: |
        Get aggregated analytics for dashboard and reporting.
        Essential for executive dashboards, trend analysis, and KPI tracking.
      operationId: getAnalyticsSummary
      tags:
        - Analytics
      parameters:
        - name: period
          in: query
          required: false
          description: Time period for analytics
          schema:
            type: string
            enum: [7d, 30d, 90d]
            default: 7d
        - name: group_by
          in: query
          required: false
          description: Comma-separated list of grouping fields
          schema:
            type: string
            pattern: '^(category|user_segment)(,(category|user_segment))*$'
            example: category,user_segment
            default: category
      responses:
        '200':
          description: Analytics summary retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsSummaryResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /analytics/trends:
    get:
      summary: Analytics Trends Analysis
      description: |
        Get historical trend analysis for insights over time.
        Supports multiple metrics, time periods, and grouping options for trend visualization.
      operationId: getAnalyticsTrends
      tags:
        - Analytics
      parameters:
        - name: metric
          in: query
          required: false
          description: Metric to analyze trends for
          schema:
            type: string
            enum: [priority_score, insights_count, avg_score]
            default: priority_score
        - name: period
          in: query
          required: false
          description: Time period for trend analysis
          schema:
            type: string
            enum: [7d, 30d, 90d]
            default: 30d
        - name: group_by
          in: query
          required: false
          description: Time interval grouping
          schema:
            type: string
            enum: [day, week, month]
            default: day
      responses:
        '200':
          description: Trends analysis retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrendsAnalysisResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /analytics/competitors:
    get:
      summary: Competitor Intelligence Analysis
      description: |
        Get competitive intelligence analysis including competitor mentions,
        sentiment analysis, and market positioning insights.
      operationId: getCompetitorAnalysis
      tags:
        - Analytics
      parameters:
        - name: competitor
          in: query
          required: false
          description: Filter by specific competitor name
          schema:
            type: string
        - name: sentiment
          in: query
          required: false
          description: Filter by sentiment
          schema:
            type: string
            enum: [positive, negative, neutral]
        - name: limit
          in: query
          required: false
          description: Maximum number of competitors to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
      responses:
        '200':
          description: Competitor analysis retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompetitorAnalysisResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /executions/{executionName}:
    delete:
      summary: Cancel Running Execution
      description: |
        Cancel a currently running pipeline execution.
        Returns error if execution is already in terminal state (SUCCEEDED, FAILED, etc.).
      operationId: cancelExecution
      tags:
        - Job Management
      parameters:
        - name: executionName
          in: path
          required: true
          description: The unique execution name to cancel
          schema:
            type: string
            pattern: '^manual-[0-9]{8}-[0-9]{6}-[a-f0-9]{8}$'
            example: manual-20250923-021621-e5cff012
      responses:
        '200':
          description: Execution cancelled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelExecutionResponse'
        '404':
          description: Execution not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Cannot cancel execution in terminal state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /logs/{executionName}:
    get:
      summary: Get Execution Logs
      description: |
        Retrieve detailed execution logs for a specific pipeline run.
        Includes Step Functions events, Lambda executions, and error details.
      operationId: getExecutionLogs
      tags:
        - Job Management
      parameters:
        - name: executionName
          in: path
          required: true
          description: The unique execution name to get logs for
          schema:
            type: string
            pattern: '^manual-[0-9]{8}-[0-9]{6}-[a-f0-9]{8}$'
            example: manual-20250923-021621-e5cff012
        - name: level
          in: query
          required: false
          description: Filter logs by level
          schema:
            type: string
            enum: [ALL, DEBUG, INFO, WARN, ERROR]
            default: INFO
        - name: limit
          in: query
          required: false
          description: Maximum number of log entries to return
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
        - name: start_time
          in: query
          required: false
          description: Filter logs after this timestamp (ISO 8601)
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Execution logs retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecutionLogsResponse'
        '404':
          description: Execution not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /config:
    get:
      summary: Get System Configuration
      description: |
        Get current system configuration settings including crawl parameters,
        analysis settings, storage configuration, and system defaults.
      operationId: getSystemConfiguration
      tags:
        - Configuration
      responses:
        '200':
          description: System configuration retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemConfigurationResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'
    put:
      summary: Update System Configuration
      description: |
        Update system configuration settings. Only specified sections will be updated;
        other settings remain unchanged. Validates section names and structure.
      operationId: updateSystemConfiguration
      tags:
        - Configuration
      requestBody:
        description: Configuration sections to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationUpdateRequest'
            examples:
              crawl_settings:
                summary: Update crawl settings
                value:
                  crawl_settings:
                    default_days_back: 5
                    default_min_score: 15
              system_settings:
                summary: Update system settings
                value:
                  system_settings:
                    maintenance_mode: true
                    rate_limit_per_minute: 100
              multiple_sections:
                summary: Update multiple sections
                value:
                  crawl_settings:
                    default_days_back: 7
                  analysis_settings:
                    priority_threshold: 6
      responses:
        '200':
          description: Configuration updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationUpdateResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /health:
    get:
      summary: System Health Check
      description: |
        Comprehensive system health check including database connectivity,
        AI service status, performance metrics, and resource utilization.
        Returns degraded status if non-critical systems have issues.
      operationId: getSystemHealth
      tags:
        - Health
      responses:
        '200':
          description: System is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        '503':
          description: System is degraded or unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResponse'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication (required for all endpoints)

  schemas:
    CrawlTriggerRequest:
      type: object
      description: Optional parameters for customizing crawl job execution
      properties:
        subreddits:
          type: array
          items:
            type: string
          description: List of subreddit names to crawl (without r/ prefix), focused on PI law communities
          example: ["LawFirm", "Lawyertalk", "legaltech", "legaltechAI"]
          maxItems: 10
        crawl_type:
          type: string
          enum: [crawl, search, both]
          description: |
            Type of crawl to perform:
            - crawl: Get recent posts from subreddit listings
            - search: Search for specific keywords
            - both: Perform both crawl and search (default)
          default: both
        days_back:
          type: integer
          minimum: 1
          maximum: 30
          description: Number of days to look back for posts
          default: 3
          example: 2
        min_score:
          type: integer
          minimum: 0
          description: Minimum post score (upvotes) threshold to filter noise
          default: 10
          example: 8

    CrawlTriggerResponse:
      type: object
      required:
        - message
        - executionArn
        - executionName
        - startDate
        - parameters
      properties:
        message:
          type: string
          example: "Crawl job started successfully"
        executionArn:
          type: string
          description: AWS Step Functions execution ARN for tracking
          example: "arn:aws:states:us-west-2:705247044519:execution:supio-reddit-insights-pipeline:manual-20250923-021621-e5cff012"
        executionName:
          type: string
          description: Unique execution name for status checking
          example: "manual-20250923-021621-e5cff012"
        startDate:
          type: string
          format: date-time
          description: ISO 8601 timestamp when the job started
          example: "2025-09-23T02:16:21.540000+00:00"
        parameters:
          type: object
          description: Actual parameters used for the crawl job
          properties:
            manual_trigger:
              type: boolean
              example: true
            trigger_time:
              type: string
              format: date-time
            trigger_source:
              type: string
              example: "api_gateway"
            request_id:
              type: string
              example: "e5cff012-c842-418a-a754-11238ea18615"
            subreddits:
              type: array
              items:
                type: string
            crawl_type:
              type: string
            days_back:
              type: integer
            min_score:
              type: integer

    JobStatusResponse:
      type: object
      required:
        - executionArn
        - status
        - startDate
        - input
      properties:
        executionArn:
          type: string
          example: "arn:aws:states:us-west-2:705247044519:execution:supio-reddit-insights-pipeline:manual-20250923-021621-e5cff012"
        status:
          type: string
          enum: [RUNNING, SUCCEEDED, FAILED, TIMED_OUT, ABORTED]
          description: Current execution status
          example: "SUCCEEDED"
        startDate:
          type: string
          format: date-time
          example: "2025-09-23T02:16:21.540000+00:00"
        stopDate:
          type: string
          format: date-time
          nullable: true
          description: When the job completed (null if still running)
          example: "2025-09-23T02:19:48.610000+00:00"
        input:
          type: object
          description: Input parameters provided when the job was triggered
        output:
          type: object
          nullable: true
          description: Job results (null if still running or failed)
          properties:
            statusCode:
              type: integer
              example: 200
            insights_stored:
              type: integer
              description: Number of insights stored in DynamoDB
            high_priority_count:
              type: integer
              description: Number of high priority insights (score >= 8)
            alerts:
              type: array
              items:
                type: object
                properties:
                  post_id:
                    type: string
                  priority:
                    type: integer
                  summary:
                    type: string
                  action:
                    type: string
            timestamp:
              type: string
              format: date-time

    ExecutionListResponse:
      type: object
      required:
        - executions
        - count
      properties:
        executions:
          type: array
          items:
            $ref: '#/components/schemas/ExecutionSummary'
          maxItems: 10
        count:
          type: integer
          description: Number of executions returned
          example: 7

    ExecutionSummary:
      type: object
      required:
        - executionArn
        - name
        - status
        - startDate
      properties:
        executionArn:
          type: string
        name:
          type: string
          example: "manual-20250923-021621-e5cff012"
        status:
          type: string
          enum: [RUNNING, SUCCEEDED, FAILED, TIMED_OUT, ABORTED]
        startDate:
          type: string
          format: date-time
        stopDate:
          type: string
          format: date-time
          nullable: true

    ApiDocumentation:
      type: object
      properties:
        service:
          type: string
          example: "Supio Reddit Legal Communities Crawler API"
        version:
          type: string
          example: "1.0"
        description:
          type: string
        endpoints:
          type: object
        status_values:
          type: array
          items:
            type: string
        authentication:
          type: string
        cors:
          type: string

    InsightsListResponse:
      type: object
      required:
        - data
        - pagination
        - filters
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/InsightSummary'
          maxItems: 100
        pagination:
          type: object
          required:
            - limit
            - count
            - hasMore
          properties:
            limit:
              type: integer
              example: 50
            count:
              type: integer
              example: 25
            hasMore:
              type: boolean
              example: false
        filters:
          type: object
          properties:
            priority_min:
              type: integer
              nullable: true
            priority_max:
              type: integer
              nullable: true
            category:
              type: string
              nullable: true
            user_segment:
              type: string
              nullable: true
            date_from:
              type: string
              nullable: true
            date_to:
              type: string
              nullable: true

    InsightSummary:
      type: object
      required:
        - insight_id
        - post_id
        - priority_score
        - feature_summary
        - feature_category
        - user_segment
        - subreddit
        - analyzed_at
        - action_required
        - suggested_action
        - competitors_mentioned
      properties:
        insight_id:
          type: string
          example: "INSIGHT-2025-09-23-PRIORITY-8-ID-1nnv6yo"
        post_id:
          type: string
          example: "1nnv6yo"
        priority_score:
          type: integer
          minimum: 0
          maximum: 10
          example: 8
        feature_summary:
          type: string
          example: "Medical records chronology automation for personal injury cases"
        feature_category:
          type: string
          enum: [medical_records_processing, demand_letter_automation, medical_chronology, settlement_valuation, case_management, document_automation, workflow_management, ai_integration]
          example: "medical_records_processing"
        user_segment:
          type: string
          enum: [solo_pi_attorney, small_pi_firm, mid_size_pi_firm, large_pi_firm, large_law_firm, mid_size_firm, solo_practitioner]
          example: "small_pi_firm"
        subreddit:
          type: string
          example: "LawFirm"
        analyzed_at:
          type: string
          format: date-time
          example: "2025-09-23T17:44:42.643935"
        action_required:
          type: boolean
          example: true
        suggested_action:
          type: string
          example: "Evaluate feasibility for Q1 2026 roadmap"
        competitors_mentioned:
          type: array
          items:
            type: string
          example: ["EvenUp", "Eve"]

    InsightDetailsResponse:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/InsightDetails'

    InsightDetails:
      type: object
      required:
        - insight_id
        - post_id
        - post_url
        - subreddit
        - timestamp
        - analyzed_at
        - collected_at
        - feature_summary
        - feature_details
        - feature_category
        - priority_score
        - implementation_size
        - user_segment
        - ai_readiness
        - competitors_mentioned
        - supio_mentioned
        - competitive_advantage
        - action_required
        - suggested_action
        - pain_points
        - post_score
        - num_comments
      properties:
        insight_id:
          type: string
          example: "INSIGHT-2025-09-23-PRIORITY-8-ID-1nnv6yo"
        post_id:
          type: string
          example: "1nnv6yo"
        post_url:
          type: string
          format: uri
          example: "https://reddit.com/r/LawFirm/comments/1nnv6yo/..."
        subreddit:
          type: string
          example: "LawFirm"
        timestamp:
          type: integer
          description: Unix timestamp of the original post
          example: 1758567337
        analyzed_at:
          type: string
          format: date-time
          example: "2025-09-23T17:44:42.643935"
        collected_at:
          type: string
          format: date-time
          example: "2025-09-23T17:43:53.024140+00:00"
        feature_summary:
          type: string
          example: "Document automation for contract review workflow"
        feature_details:
          type: string
          example: "User requesting AI-powered contract analysis..."
        feature_category:
          type: string
          enum: [document_automation, workflow_management, ai_integration, case_management, billing_automation, client_communication, legal_research, compliance_tracking]
          example: "document_automation"
        priority_score:
          type: integer
          minimum: 0
          maximum: 10
          example: 8
        implementation_size:
          type: string
          enum: [small, medium, large, enterprise]
          example: "large"
        user_segment:
          type: string
          enum: [solo_pi_attorney, small_pi_firm, mid_size_pi_firm, large_pi_firm, large_law_firm, mid_size_firm, solo_practitioner]
          example: "small_pi_firm"
        ai_readiness:
          type: string
          enum: [low, medium, high]
          example: "high"
        competitors_mentioned:
          type: array
          items:
            type: string
          example: ["EvenUp", "Eve"]
        supio_mentioned:
          type: boolean
          example: false
        competitive_advantage:
          type: string
          example: "Better integration with existing workflows"
        action_required:
          type: boolean
          example: true
        suggested_action:
          type: string
          example: "Evaluate feasibility for Q1 2026 roadmap"
        pain_points:
          type: array
          items:
            type: string
          example: ["Manual contract review", "Time consuming process"]
        post_score:
          type: integer
          example: 45
        num_comments:
          type: integer
          example: 23

    AnalyticsSummaryResponse:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          $ref: '#/components/schemas/AnalyticsData'
        meta:
          type: object
          required:
            - generated_at
            - items_analyzed
          properties:
            generated_at:
              type: string
              format: date-time
              example: "2025-09-23T17:45:00.000Z"
            items_analyzed:
              type: integer
              example: 127

    AnalyticsData:
      type: object
      required:
        - period
        - date_range
        - total_insights
        - high_priority_insights
        - actionable_insights
        - avg_priority_score
      properties:
        period:
          type: string
          enum: [7d, 30d, 90d]
          example: "7d"
        date_range:
          type: object
          required:
            - start
            - end
          properties:
            start:
              type: string
              format: date
              example: "2025-09-16"
            end:
              type: string
              format: date
              example: "2025-09-23"
        total_insights:
          type: integer
          example: 127
        high_priority_insights:
          type: integer
          description: Number of insights with priority >= 8
          example: 23
        actionable_insights:
          type: integer
          description: Number of insights requiring action
          example: 45
        avg_priority_score:
          type: number
          format: float
          example: 6.2
        by_category:
          type: object
          additionalProperties:
            type: object
            required:
              - count
              - avg_priority
            properties:
              count:
                type: integer
              avg_priority:
                type: number
                format: float
          example:
            document_automation:
              count: 34
              avg_priority: 7.1
            workflow_management:
              count: 28
              avg_priority: 6.8
            ai_integration:
              count: 31
              avg_priority: 7.5
        by_user_segment:
          type: object
          additionalProperties:
            type: object
            required:
              - count
              - avg_priority
            properties:
              count:
                type: integer
              avg_priority:
                type: number
                format: float
          example:
            large_law_firm:
              count: 45
              avg_priority: 7.2
            solo_practitioner:
              count: 38
              avg_priority: 6.1
            corporate_legal:
              count: 44
              avg_priority: 6.9
        top_competitors:
          type: object
          additionalProperties:
            type: integer
          example:
            EvenUp: 18
            Eve: 15
        recent_high_priority:
          type: array
          items:
            type: object
            required:
              - insight_id
              - priority_score
              - feature_summary
              - analyzed_at
            properties:
              insight_id:
                type: string
              priority_score:
                type: integer
              feature_summary:
                type: string
              analyzed_at:
                type: string
                format: date-time
          maxItems: 5
          example:
            - insight_id: "INSIGHT-2025-09-23-PRIORITY-9-ID-abc123"
              priority_score: 9
              feature_summary: "AI-powered medical chronology automation for PI cases"
              analyzed_at: "2025-09-23T15:30:00"

    TrendsAnalysisResponse:
      type: object
      required:
        - data
        - meta
      properties:
        data:
          type: object
          required:
            - metric
            - period
            - group_by
            - date_range
            - trend_points
            - summary
          properties:
            metric:
              type: string
              enum: [priority_score, insights_count, avg_score]
              example: "insights_count"
            period:
              type: string
              enum: [7d, 30d, 90d]
              example: "30d"
            group_by:
              type: string
              enum: [day, week, month]
              example: "day"
            date_range:
              type: object
              required:
                - start
                - end
              properties:
                start:
                  type: string
                  format: date
                  example: "2025-08-24"
                end:
                  type: string
                  format: date
                  example: "2025-09-23"
            trend_points:
              type: array
              items:
                type: object
                required:
                  - date
                  - value
                  - count
                properties:
                  date:
                    type: string
                    format: date
                    example: "2025-09-23"
                  value:
                    type: number
                    format: float
                    description: Metric value for this data point
                    example: 15
                  count:
                    type: integer
                    description: Number of insights in this period
                    example: 15
            summary:
              type: object
              required:
                - trend_direction
                - volatility
                - total_data_points
                - avg_value
              properties:
                trend_direction:
                  type: string
                  enum: [increasing, decreasing, stable]
                  description: Overall trend direction
                  example: "increasing"
                volatility:
                  type: number
                  format: float
                  description: Measure of trend variance
                  example: 8.5
                total_data_points:
                  type: integer
                  example: 30
                avg_value:
                  type: number
                  format: float
                  example: 12.3
        meta:
          type: object
          required:
            - generated_at
            - total_insights_analyzed
          properties:
            generated_at:
              type: string
              format: date-time
              example: "2025-09-23T17:45:00.000Z"
            total_insights_analyzed:
              type: integer
              example: 170

    CompetitorAnalysisResponse:
      type: object
      required:
        - data
        - filters
        - meta
      properties:
        data:
          type: object
          required:
            - competitors
            - market_analysis
          properties:
            competitors:
              type: array
              items:
                type: object
                required:
                  - name
                  - total_mentions
                  - avg_priority
                  - categories
                  - user_segments
                  - sentiment_breakdown
                  - insights
                properties:
                  name:
                    type: string
                    example: "EvenUp"
                  total_mentions:
                    type: integer
                    description: Number of times this competitor was mentioned
                    example: 15
                  avg_priority:
                    type: number
                    format: float
                    description: Average priority score of insights mentioning this competitor
                    example: 7.8
                  categories:
                    type: object
                    additionalProperties:
                      type: integer
                    description: Breakdown of mentions by PI category
                    example:
                      medical_records_processing: 12
                      demand_letter_automation: 8
                  user_segments:
                    type: object
                    additionalProperties:
                      type: integer
                    description: Breakdown of mentions by PI user segment
                    example:
                      small_pi_firm: 12
                      solo_pi_attorney: 8
                  sentiment_breakdown:
                    type: object
                    required:
                      - positive
                      - negative
                      - neutral
                    properties:
                      positive:
                        type: integer
                        example: 8
                      negative:
                        type: integer
                        example: 2
                      neutral:
                        type: integer
                        example: 5
                  insights:
                    type: array
                    description: Sample insights mentioning this competitor
                    items:
                      type: object
                      required:
                        - insight_id
                        - priority_score
                        - feature_summary
                        - competitive_advantage
                        - analyzed_at
                        - subreddit
                      properties:
                        insight_id:
                          type: string
                        priority_score:
                          type: integer
                        feature_summary:
                          type: string
                        competitive_advantage:
                          type: string
                        analyzed_at:
                          type: string
                          format: date-time
                        subreddit:
                          type: string
            market_analysis:
              type: object
              required:
                - market_leader
                - total_competitors_mentioned
                - avg_mentions_per_competitor
                - most_discussed_categories
              properties:
                market_leader:
                  type: string
                  nullable: true
                  description: PI competitor with most mentions
                  example: "EvenUp"
                total_competitors_mentioned:
                  type: integer
                  example: 8
                avg_mentions_per_competitor:
                  type: number
                  format: float
                  example: 6.5
                most_discussed_categories:
                  type: object
                  additionalProperties:
                    type: integer
                  description: Top 5 PI categories where competitors are discussed
                  example:
                    medical_records_processing: 28
                    demand_letter_automation: 22
        filters:
          type: object
          properties:
            competitor:
              type: string
              nullable: true
            sentiment:
              type: string
              nullable: true
            limit:
              type: integer
        meta:
          type: object
          required:
            - generated_at
            - total_insights_analyzed
          properties:
            generated_at:
              type: string
              format: date-time
              example: "2025-09-23T17:45:00.000Z"
            total_insights_analyzed:
              type: integer
              example: 170

    CancelExecutionResponse:
      type: object
      required:
        - message
        - executionArn
        - executionName
        - stopDate
        - previous_status
        - new_status
      properties:
        message:
          type: string
          example: "Execution cancellation requested successfully"
        executionArn:
          type: string
          example: "arn:aws:states:us-west-2:705247044519:execution:supio-reddit-insights-pipeline:manual-20250923-021621-e5cff012"
        executionName:
          type: string
          example: "manual-20250923-021621-e5cff012"
        stopDate:
          type: string
          format: date-time
          description: When the execution was stopped
          example: "2025-09-23T02:19:48.610000+00:00"
        previous_status:
          type: string
          enum: [RUNNING]
          description: Status before cancellation
          example: "RUNNING"
        new_status:
          type: string
          enum: [ABORTED]
          description: Status after cancellation
          example: "ABORTED"

    ExecutionLogsResponse:
      type: object
      required:
        - data
        - filters
        - meta
      properties:
        data:
          type: object
          required:
            - execution_name
            - execution_arn
            - execution_status
            - logs
            - log_summary
          properties:
            execution_name:
              type: string
              example: "manual-20250923-021621-e5cff012"
            execution_arn:
              type: string
              example: "arn:aws:states:us-west-2:705247044519:execution:supio-reddit-insights-pipeline:manual-20250923-021621-e5cff012"
            execution_status:
              type: string
              enum: [RUNNING, SUCCEEDED, FAILED, TIMED_OUT, ABORTED]
              example: "SUCCEEDED"
            logs:
              type: array
              items:
                type: object
                required:
                  - timestamp
                  - level
                  - event_type
                  - message
                  - details
                properties:
                  timestamp:
                    type: string
                    format: date-time
                    example: "2025-09-23T02:16:21.540000+00:00"
                  level:
                    type: string
                    enum: [INFO, ERROR]
                    example: "INFO"
                  event_type:
                    type: string
                    description: Step Functions event type
                    example: "ExecutionStarted"
                  message:
                    type: string
                    description: Human-readable log message
                    example: "Execution started"
                  details:
                    type: object
                    description: Additional event details
                    additionalProperties: true
            log_summary:
              type: object
              required:
                - total_events
                - filtered_logs
                - error_count
              properties:
                total_events:
                  type: integer
                  description: Total number of events in execution history
                  example: 45
                filtered_logs:
                  type: integer
                  description: Number of logs after applying filters
                  example: 30
                error_count:
                  type: integer
                  description: Number of error-level log entries
                  example: 0
                execution_duration:
                  type: integer
                  nullable: true
                  description: Total execution duration in seconds
                  example: 180
        filters:
          type: object
          properties:
            level:
              type: string
              example: "INFO"
            limit:
              type: integer
              example: 100
            start_time:
              type: string
              nullable: true
        meta:
          type: object
          required:
            - generated_at
          properties:
            generated_at:
              type: string
              format: date-time
              example: "2025-09-23T17:45:00.000Z"

    SystemConfigurationResponse:
      type: object
      required:
        - crawl_settings
        - analysis_settings
        - storage_settings
        - system_settings
      properties:
        crawl_settings:
          type: object
          required:
            - default_subreddits
            - default_crawl_type
            - default_days_back
            - default_min_score
            - max_posts_per_crawl
          properties:
            default_subreddits:
              type: array
              items:
                type: string
              description: Default list of PI-focused subreddits to crawl
              example: ["LawFirm", "Lawyertalk", "legaltech", "legaltechAI"]
            default_crawl_type:
              type: string
              enum: [crawl, search, both]
              description: Default crawl method
              example: "both"
            default_days_back:
              type: integer
              minimum: 1
              maximum: 30
              description: Default number of days to look back
              example: 3
            default_min_score:
              type: integer
              minimum: 0
              description: Default minimum post score threshold
              example: 10
            max_posts_per_crawl:
              type: integer
              description: Maximum posts processed per crawl job
              example: 500
        analysis_settings:
          type: object
          required:
            - priority_threshold
            - ai_model
            - analysis_timeout_seconds
            - max_retries
          properties:
            priority_threshold:
              type: integer
              minimum: 0
              maximum: 10
              description: Minimum priority score threshold for storing insights
              example: 5
            ai_model:
              type: string
              description: AI model identifier for analysis
              example: "us.anthropic.claude-sonnet-4-20250514-v1:0"
            analysis_timeout_seconds:
              type: integer
              description: Timeout for individual AI analysis requests
              example: 30
            max_retries:
              type: integer
              description: Maximum retry attempts for failed analyses
              example: 3
        storage_settings:
          type: object
          required:
            - insights_ttl_days
            - max_insights_per_request
            - analytics_cache_ttl_minutes
          properties:
            insights_ttl_days:
              type: integer
              description: Time-to-live for insights in DynamoDB (days)
              example: 90
            max_insights_per_request:
              type: integer
              description: Maximum insights returned per API request
              example: 100
            analytics_cache_ttl_minutes:
              type: integer
              description: Cache TTL for analytics data (minutes)
              example: 15
        system_settings:
          type: object
          required:
            - api_version
            - environment
            - maintenance_mode
            - rate_limit_per_minute
          properties:
            api_version:
              type: string
              description: Current API version
              example: "1.0"
            environment:
              type: string
              enum: [development, staging, production]
              description: Current deployment environment
              example: "production"
            maintenance_mode:
              type: boolean
              description: Whether system is in maintenance mode
              example: false
            rate_limit_per_minute:
              type: integer
              description: API rate limit (requests per minute)
              example: 60

    ConfigurationUpdateRequest:
      type: object
      description: Configuration sections to update (only specified sections will be modified)
      properties:
        crawl_settings:
          type: object
          properties:
            default_subreddits:
              type: array
              items:
                type: string
            default_crawl_type:
              type: string
              enum: [crawl, search, both]
            default_days_back:
              type: integer
              minimum: 1
              maximum: 30
            default_min_score:
              type: integer
              minimum: 0
            max_posts_per_crawl:
              type: integer
        analysis_settings:
          type: object
          properties:
            priority_threshold:
              type: integer
              minimum: 0
              maximum: 10
            analysis_timeout_seconds:
              type: integer
            max_retries:
              type: integer
        storage_settings:
          type: object
          properties:
            insights_ttl_days:
              type: integer
            max_insights_per_request:
              type: integer
            analytics_cache_ttl_minutes:
              type: integer
        system_settings:
          type: object
          properties:
            maintenance_mode:
              type: boolean
            rate_limit_per_minute:
              type: integer

    ConfigurationUpdateResponse:
      type: object
      required:
        - message
        - updated_sections
        - timestamp
        - updated_by
      properties:
        message:
          type: string
          example: "Configuration updated successfully"
        updated_sections:
          type: array
          items:
            type: string
          description: List of configuration sections that were updated
          example: ["crawl_settings", "system_settings"]
        timestamp:
          type: string
          format: date-time
          description: When the update was applied
          example: "2025-09-23T17:45:00.000Z"
        updated_by:
          type: string
          description: Identifier of the user/system that made the update
          example: "api_user"

    HealthCheckResponse:
      type: object
      required:
        - status
        - timestamp
        - version
        - checks
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
          description: Overall system health status
          example: "healthy"
        timestamp:
          type: string
          format: date-time
          description: When the health check was performed
          example: "2025-09-23T17:45:00.000Z"
        version:
          type: string
          description: API version
          example: "1.0.0"
        uptime_seconds:
          type: integer
          description: System uptime in seconds
          example: 3600
        checks:
          type: object
          required:
            - database
            - pipeline
          properties:
            database:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum: [healthy, unhealthy]
                  example: "healthy"
                response_time_ms:
                  type: integer
                  description: Database response time in milliseconds
                  example: 50
                error:
                  type: string
                  description: Error message if unhealthy
            storage:
              type: object
              properties:
                status:
                  type: string
                  enum: [healthy, unhealthy]
                response_time_ms:
                  type: integer
            ai_service:
              type: object
              properties:
                status:
                  type: string
                  enum: [healthy, unhealthy]
                response_time_ms:
                  type: integer
            pipeline:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum: [healthy, unhealthy]
                  example: "healthy"
                response_time_ms:
                  type: integer
                  example: 100
                last_execution:
                  type: string
                  format: date-time
                  nullable: true
                  description: When the pipeline last executed successfully
                error:
                  type: string
                  description: Error message if unhealthy
        metrics:
          type: object
          description: Performance and usage metrics
          properties:
            total_requests:
              type: integer
              description: Total API requests processed
              example: 1250
            error_rate:
              type: number
              format: float
              description: Error rate (0.0 to 1.0)
              example: 0.02
            avg_response_time_ms:
              type: integer
              description: Average response time in milliseconds
              example: 125
            active_executions:
              type: integer
              description: Number of currently running pipeline executions
              example: 0
        resources:
          type: object
          description: Resource utilization metrics
          properties:
            memory_usage_percent:
              type: integer
              description: Memory usage percentage
              example: 45
            cpu_usage_percent:
              type: integer
              description: CPU usage percentage
              example: 12
            disk_usage_percent:
              type: integer
              description: Disk usage percentage
              example: 23

    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: string
          description: Error message describing what went wrong
          example: "Invalid JSON in request body"
        message:
          type: string
          description: Additional error details if available
          example: "days_back must be a positive integer"

  responses:
    BadRequest:
      description: Invalid request parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            invalid_json:
              summary: Invalid JSON in request body
              value:
                error: "Invalid JSON in request body"
            invalid_crawl_type:
              summary: Invalid crawl_type parameter
              value:
                error: "crawl_type must be crawl, search, or both"
            invalid_days_back:
              summary: Invalid days_back parameter
              value:
                error: "days_back must be a positive integer"

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "Internal server error"
            message: "Failed to start crawl job"

tags:
  - name: Documentation
    description: API documentation and metadata
  - name: Job Management
    description: Operations for managing crawl jobs and monitoring execution
  - name: Insights
    description: Operations for accessing and filtering collected insights from Reddit posts
  - name: Analytics
    description: Operations for retrieving aggregated analytics and dashboard data
  - name: Configuration
    description: Operations for managing system configuration and settings
  - name: Health
    description: Operations for monitoring system health and performance metrics